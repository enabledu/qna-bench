"""Initial migration

Revision ID: d724042ef310
Revises: 
Create Date: 2023-05-21 17:47:56.792299

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd724042ef310'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('age', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('upvote', sa.SmallInteger(), nullable=False),
    sa.Column('downvote', sa.SmallInteger(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('upvote', sa.SmallInteger(), nullable=False),
    sa.Column('downvote', sa.SmallInteger(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['Question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('upvote', sa.SmallInteger(), nullable=False),
    sa.Column('downvote', sa.SmallInteger(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['Answer.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['Question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute("CREATE SEQUENCE User_id_seq")
    op.execute("CREATE SEQUENCE Question_id_seq")
    op.execute("CREATE SEQUENCE Answer_id_seq")
    op.execute("CREATE SEQUENCE Comment_id_seq")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Comment')
    op.drop_table('Answer')
    op.drop_table('Question')
    op.drop_table('User')
    # ### end Alembic commands ###
